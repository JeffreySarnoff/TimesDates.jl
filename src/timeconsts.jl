const EmptyPeriod = Year(0) + Hour(0)
Base.isempty(x::Dates.CompoundPeriod) = length(x.periods) === 0

const QUARTERS_PER_YEAR = Int64(4)

const MONTHS_PER_YEAR = Int64(12)
const MONTHS_PER_QUARTER = Int64(3)

const DAYS_PER_WEEK = Int64(7)

const HOURS_PER_DAY = Int64(24)
const HOURS_PER_WEEK = HOURS_PER_DAY * DAYS_PER_WEEK

const MINUTES_PER_HOUR = Int64(60)
const MINUTES_PER_DAY = MINUTES_PER_HOUR * HOURS_PER_DAY
const MINUTES_PER_WEEK = MINUTES_PER_DAY * DAYS_PER_WEEK

const SECONDS_PER_MINUTE = Int64(60)
const SECONDS_PER_HOUR = SECONDS_PER_MINUTE * MINUTES_PER_HOUR
const SECONDS_PER_DAY = SECONDS_PER_HOUR * HOURS_PER_DAY
const SECONDS_PER_WEEK = SECONDS_PER_DAY * DAYS_PER_WEEK

const MILLISECONDS_PER_SECOND = Int64(1_000)
const MILLISECONDS_PER_MINUTE = MILLISECONDS_PER_SECOND * SECONDS_PER_MINUTE
const MILLISECONDS_PER_HOUR = MILLISECONDS_PER_MINUTE * MINUTES_PER_HOUR
const MILLISECONDS_PER_DAY = MILLISECONDS_PER_HOUR * HOURS_PER_DAY
const MILLISECONDS_PER_WEEK = MILLISECONDS_PER_DAY * DAYS_PER_WEEK

const MICROSECONDS_PER_MILLISECOND = Int64(1_000)
const MICROSECONDS_PER_SECOND = MICROSECONDS_PER_MILLISECOND * MILLISECONDS_PER_SECOND
const MICROSECONDS_PER_MINUTE = MICROSECONDS_PER_SECOND * SECONDS_PER_MINUTE
const MICROSECONDS_PER_HOUR = MICROSECONDS_PER_MINUTE * MINUTES_PER_HOUR
const MICROSECONDS_PER_DAY = MICROSECONDS_PER_HOUR * HOURS_PER_DAY
const MICROSECONDS_PER_WEEK = MICROSECONDS_PER_DAY * DAYS_PER_WEEK

const NANOSECONDS_PER_MICROSECOND = Int64(1_000)
const NANOSECONDS_PER_MILLISECOND = NANOSECONDS_PER_MICROSECOND * MICROSECONDS_PER_SECOND
const NANOSECONDS_PER_SECOND = NANOSECONDS_PER_MILLISECOND * MILLISECONDS_PER_SECOND
const NANOSECONDS_PER_MINUTE = NANOSECONDS_PER_SECOND * SECONDS_PER_MINUTE
const NANOSECONDS_PER_HOUR = NANOSECONDS_PER_MINUTE * MINUTES_PER_HOUR
const NANOSECONDS_PER_DAY = NANOSECONDS_PER_HOUR * HOURS_PER_DAY
const NANOSECONDS_PER_WEEK = NANOSECONDS_PER_DAY * DAYS_PER_WEEK

